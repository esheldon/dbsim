#!/usr/bin/env python
from __future__ import print_function
import dbsim

from argparse import ArgumentParser
parser=ArgumentParser(__doc__)

parser.add_argument('run',help="run identifier")
parser.add_argument('system',help="batch system")
parser.add_argument('--missing',action='store_true')

def main():
    args=parser.parse_args()

    run_config = dbsim.files.read_config_file(args.run)
    run_config['run'] = args.run

    if args.system=='wq':
        maker=dbsim.batch.WQMaker(run_config, missing=args.missing)
    elif args.system=='lsf':
        maker=dbsim.batch.LSFMaker(run_config, missing=args.missing)
    elif args.system=='nersc':
        maker=dbsim.batch.SLRMakerShifter(run_config, missing=args.missing)
    elif args.system=='condor':
        maker=dbsim.batch.CondorMaker(run_config, missing=args.missing)
    else:
        raise ValueError("bad queue system: '%s'" % args.system)

    maker.go()

if __name__=='__main__':
    main()
